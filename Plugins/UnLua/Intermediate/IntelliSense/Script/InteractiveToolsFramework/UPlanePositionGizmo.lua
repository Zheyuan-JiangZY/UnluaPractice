---UPlanePositionGizmo implements a gizmo interaction where 2D parameter value is manipulated
---by dragging a point on a 3D plane in space. The 3D position is converted to 2D coordinates
---based on the tangent axes of the plane.
---As with other base gizmos, this class only implements the interaction. The visual aspect of the
---gizmo, the plane, and the parameter storage are all provided externally.
---The plane is provided by an IGizmoAxisSource. The origin and normal define the plane and then
---the tangent axes of the source define the coordinate space.
---The interaction target (ie the thing you have to click on to start the dragging interaction) is provided by an IGizmoClickTarget.
---The new 2D parameter value is sent to an IGizmoVec2ParameterSource
---Internally a UClickDragInputBehavior is used to handle mouse input, configured in ::Setup()
---@class UPlanePositionGizmo : UInteractiveGizmo
---@field public AxisSource TScriptInterface<UGizmoAxisSource> @AxisSource provides the 3D plane on which the interaction happens
---@field public ParameterSource TScriptInterface<UGizmoVec2ParameterSource> @The 3D plane coordinates are converted to 2D coordinates in the plane tangent space, and the change in value is sent to this ParameterSource
---@field public HitTarget TScriptInterface<UGizmoClickTarget> @The HitTarget provides a hit-test against some 3D element (presumably a visual widget) that controls when interaction can start
---@field public StateTarget TScriptInterface<UGizmoStateTarget> @StateTarget is notified when interaction starts and ends, so that things like undo/redo can be handled externally
---@field public bEnableSignedAxis boolean @If enabled, then the sign on the parameter delta is always "increasing" when moving away from the origin point, rather than just being a projection onto the axis
---@field public bFlipX boolean @If enabled, flip sign of parameter delta on X axis
---@field public bFlipY boolean @If enabled, flip sign of parameter delta on Y axis
---@field public bInInteraction boolean @If true, we are in an active click+drag interaction, otherwise we are not
---@field public InteractionOrigin FVector @The values below are used in the context of a single click-drag interaction, ie if bInInteraction = true They otherwise should be considered uninitialized
---@field public InteractionNormal FVector
---@field public InteractionAxisX FVector
---@field public InteractionAxisY FVector
---@field public InteractionStartPoint FVector
---@field public InteractionCurPoint FVector
---@field public InteractionStartParameter FVector2D
---@field public InteractionCurParameter FVector2D
---@field public ParameterSigns FVector2D
local UPlanePositionGizmo = {}

