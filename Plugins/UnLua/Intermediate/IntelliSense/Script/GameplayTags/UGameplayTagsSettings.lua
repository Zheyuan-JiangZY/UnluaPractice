---Class for importing GameplayTags directly from a config file.
---FGameplayTagsEditorModule::StartupModule adds this class to the Project Settings menu to be edited.
---Editing this in Project Settings will output changes to Config/DefaultGameplayTags.ini.
---Primary advantages of this approach are:
----Adding new tags doesn't require checking out external and editing file (CSV or xls) then reimporting.
----New tags are mergeable since .ini are text and non exclusive checkout.
---To do:
----Better support could be added for adding new tags. We could match existing tags and autocomplete subtags as
---the user types (e.g, autocomplete 'Damage.Physical' as the user is adding a 'Damage.Physical.Slash' tag).
---@class UGameplayTagsSettings : UGameplayTagsList
---@field public ImportTagsFromConfig boolean @If true, will import tags from ini files in the config/tags folder
---@field public WarnOnInvalidTags boolean @If true, will give load warnings when reading in saved tag references that are not in the dictionary
---@field public ClearInvalidTags boolean @If true, will clear any invalid tags when reading in saved tag references that are not in the dictionary
---@field public FastReplication boolean @If true, will replicate gameplay tags by index instead of name. For this to work, tags must be identical on client and server
---@field public InvalidTagCharacters string @These characters cannot be used in gameplay tags, in addition to special ones like newline
---@field public CategoryRemapping TArray<FGameplayTagCategoryRemap> @Category remapping. This allows base engine tag category meta data to remap to multiple project-specific categories.
---@field public GameplayTagTableList TArray<FSoftObjectPath> @List of data tables to load tags from
---@field public GameplayTagRedirects TArray<FGameplayTagRedirect> @List of active tag redirects
---@field public CommonlyReplicatedTags TArray<string> @List of most frequently replicated tags
---@field public NumBitsForContainerSize integer @Numbers of bits to use for replicating container size, set this based on how large your containers tend to be
---@field public NetIndexFirstBitSegment integer @The length in bits of the first segment when net serializing tags. We will serialize NetIndexFirstBitSegment + 1 bit to indicate "more", which is slower to replicate
---@field public RestrictedConfigFiles TArray<FRestrictedConfigInfo> @A list of .ini files used to store restricted gameplay tags.
---@field public RestrictedTagList string @Restricted Gameplay Tags. Restricted tags are intended to be top level tags that are important for your data hierarchy and modified by very few people.
local UGameplayTagsSettings = {}

