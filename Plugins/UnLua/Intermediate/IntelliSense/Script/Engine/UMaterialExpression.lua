---@class UMaterialExpression : UObject
---@field public MaterialExpressionEditorX integer
---@field public MaterialExpressionEditorY integer
---@field public GraphNode UEdGraphNode @Expression's Graph representation
---@field public MaterialExpressionGuid FGuid @GUID to uniquely identify this node, to help the tutorials out
---@field public Material UMaterial @The material that this expression is currently being compiled in. This is not necessarily the object which owns this expression, for example a preview material compiling a material function's expressions.
---@field public Function UMaterialFunction @The material function that this expression is being used with, if any. This will be NULL if the expression belongs to a function that is currently being edited,
---@field public Desc string @A description that level designers can add (shows in the material editor UI).
---@field public bRealtimePreview boolean @Set to true by RecursiveUpdateRealtimePreview() if the expression's preview needs to be updated in realtime in the material editor.
---@field public bNeedToUpdatePreview boolean @If true, we should update the preview next render. This is set when changing bRealtimePreview.
---@field public bIsParameterExpression boolean @Indicates that this is a 'parameter' type of expression and should always be loaded (ie not cooked away) because we might want the default parameter.
---@field public bCommentBubbleVisible boolean @If true, the comment bubble will be visible in the graph editor
---@field public bShowOutputNameOnPin boolean @If true, use the output name as the label for the pin
---@field public bShowMaskColorsOnPin boolean @If true, changes the pin color to match the output mask
---@field public bHidePreviewWindow boolean @If true, do not render the preview window for the expression
---@field public bCollapsed boolean @If true, show a collapsed version of the node
---@field public bShaderInputData boolean @Whether the node represents an input to the shader or not.  Used to color the node's background.
---@field public bShowInputs boolean @Whether to draw the expression's inputs.
---@field public bShowOutputs boolean @Whether to draw the expression's outputs.
---@field public MenuCategories TArray<string> @Localized categories to sort this expression into...
---@field public Outputs TArray<FExpressionOutput> @The expression's outputs, which are set in default properties by derived classes.
local UMaterialExpression = {}

