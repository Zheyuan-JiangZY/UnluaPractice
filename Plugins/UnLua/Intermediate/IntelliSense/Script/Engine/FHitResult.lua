---Structure containing information about one hit of a trace, such as point of impact and surface normal at that point.
---@class FHitResult
---@field public FaceIndex integer @Face index we hit (for complex hits with triangle meshes).
---@field public Time number @'Time' of impact along trace direction (ranging from 0.0 to 1.0) if there is a hit, indicating time between TraceStart and TraceEnd. For swept movement (but not queries) this may be pulled back slightly from the actual time of impact, to prevent precision problems with adjacent geometry.
---@field public Distance number @The distance from the TraceStart to the Location in world space. This value is 0 if there was an initial overlap (trace started inside another colliding object).
---@field public Location FVector_NetQuantize @The location in world space where the moving shape would end up against the impacted object, if there is a hit. Equal to the point of impact for line tests. Example: for a sphere trace test, this is the point where the center of the sphere would be located when it touched the other object. For swept movement (but not queries) this may not equal the final location of the shape since hits are pulled back slightly to prevent precision issues from overlapping another surface.
---@field public ImpactPoint FVector_NetQuantize @Location in world space of the actual contact of the trace shape (box, sphere, ray, etc) with the impacted object. Example: for a sphere trace test, this is the point where the surface of the sphere touches the other object.
---@field public Normal FVector_NetQuantizeNormal @Normal of the hit in world space, for the object that was swept. Equal to ImpactNormal for line tests. This is computed for capsules and spheres, otherwise it will be the same as ImpactNormal. Example: for a sphere trace test, this is a normalized vector pointing in towards the center of the sphere at the point of impact.
---@field public ImpactNormal FVector_NetQuantizeNormal @Normal of the hit in world space, for the object that was hit by the sweep, if any. For example if a sphere hits a flat plane, this is a normalized vector pointing out from the plane. In the case of impact with a corner or edge of a surface, usually the "most opposing" normal (opposed to the query direction) is chosen.
---@field public TraceStart FVector_NetQuantize @Start location of the trace. For example if a sphere is swept against the world, this is the starting location of the center of the sphere.
---@field public TraceEnd FVector_NetQuantize @End location of the trace; this is NOT where the impact occurred (if any), but the furthest point in the attempted sweep. For example if a sphere is swept against the world, this would be the center of the sphere if there was no blocking hit.
---@field public PenetrationDepth number @If this test started in penetration (bStartPenetrating is true) and a depenetration vector can be computed, this value is the distance along Normal that will result in moving out of penetration. If the distance cannot be computed, this distance will be zero.
---@field public Item integer @Extra data about item that was hit (hit primitive specific).
---@field public ElementIndex integer @Index to item that was hit, also hit primitive specific.
---@field public bBlockingHit boolean @Indicates if this hit was a result of blocking collision. If false, there was no hit or it was an overlap/touch instead.
---@field public bStartPenetrating boolean @Whether the trace started in penetration, i.e. with an initial blocking overlap. In the case of penetration, if PenetrationDepth > 0.f, then it will represent the distance along the Normal vector that will result in minimal contact between the swept shape and the object that was hit. In this case, ImpactNormal will be the normal opposed to movement at that location (ie, Normal may not equal ImpactNormal). ImpactPoint will be the same as Location, since there is no single impact point to report.
---@field public PhysMaterial TWeakObjectPtr<UPhysicalMaterial> @Physical material that was hit.
---@field public Actor TWeakObjectPtr<AActor> @Actor hit by the trace.
---@field public Component TWeakObjectPtr<UPrimitiveComponent> @PrimitiveComponent hit by the trace.
---@field public BoneName string @Name of bone we hit (for skeletal meshes).
---@field public MyBoneName string @Name of the _my_ bone which took part in hit event (in case of two skeletal meshes colliding).
local FHitResult = {}
