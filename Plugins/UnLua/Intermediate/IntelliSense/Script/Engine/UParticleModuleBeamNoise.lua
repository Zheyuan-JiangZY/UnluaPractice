---@class UParticleModuleBeamNoise : UParticleModuleBeamBase
---@field public bLowFreq_Enabled boolean @Is low frequency noise enabled.
---@field public Frequency integer @The frequency of noise points.
---@field public Frequency_LowRange integer @If not 0, then the frequency will select a random value in the range         [Frequency_LowRange..Frequency]
---@field public NoiseRange FRawDistributionVector @The noise point ranges.
---@field public NoiseRangeScale FRawDistributionFloat @A scale factor that will be applied to the noise range.
---@field public bNRScaleEmitterTime boolean @If true,  the NoiseRangeScale will be grabbed based on the emitter time. If false, the NoiseRangeScale will be grabbed based on the particle time.
---@field public NoiseSpeed FRawDistributionVector @The speed with which to move each noise point.
---@field public bSmooth boolean @Whether the noise movement should be smooth or 'jerky'.
---@field public NoiseLockRadius number @Default target-point information to use if the beam method is endpoint.
---@field public bNoiseLock boolean @INTERNAL - Whether the noise points should be locked.
---@field public bOscillate boolean @Whether the noise points should be oscillate.
---@field public NoiseLockTime number @How long the  noise points should be locked - 0.0 indicates forever.
---@field public NoiseTension number @The tension to apply to the tessellated noise line.
---@field public bUseNoiseTangents boolean @If true, calculate tangents at each noise point.
---@field public NoiseTangentStrength FRawDistributionFloat @The strength of noise tangents, if enabled.
---@field public NoiseTessellation integer @The amount of tessellation between noise points.
---@field public bTargetNoise boolean @Whether to apply noise to the target point (or end of line in distance mode...) If true, the beam could potentially 'leave' the target...
---@field public FrequencyDistance number @The distance at which to deposit noise points. If 0.0, then use the static frequency value. If not, distribute noise points at the given distance, up to the static Frequency value. At that point, evenly distribute them along the beam.
---@field public bApplyNoiseScale boolean @If true, apply the noise scale to the beam.
---@field public NoiseScale FRawDistributionFloat @The scale factor to apply to noise range. The lookup value is determined by dividing the number of noise points present by the maximum number of noise points (Frequency).
local UParticleModuleBeamNoise = {}

