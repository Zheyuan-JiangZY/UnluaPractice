---@class UParticleModuleRequired : UParticleModule
---@field public Material UMaterialInterface @The material to utilize for the emitter at this LOD level.
---@field public MinFacingCameraBlendDistance number @The distance at which PSA_FacingCameraDistanceBlend    is fully PSA_Square
---@field public MaxFacingCameraBlendDistance number @The distance at which PSA_FacingCameraDistanceBlend    is fully PSA_FacingCameraPosition
---@field public EmitterOrigin FVector
---@field public EmitterRotation FRotator
---@field public ScreenAlignment integer @The screen alignment to utilize for the emitter at this LOD level. One of the following: PSA_FacingCameraPosition - Faces the camera position, but is not dependent on the camera rotation.                                                         This method produces more stable particles under camera rotation. PSA_Square                      - Uniform scale (via SizeX) facing the camera PSA_Rectangle           - Non-uniform scale (via SizeX and SizeY) facing the camera PSA_Velocity            - Orient the particle towards both the camera and the direction                                           the particle is moving. Non-uniform scaling is allowed. PSA_TypeSpecific        - Use the alignment method indicated in the type data module. PSA_FacingCameraDistanceBlend - Blends between PSA_FacingCameraPosition and PSA_Square over specified distance.
---@field public bUseLocalSpace boolean @If true, update the emitter in local space
---@field public bKillOnDeactivate boolean @If true, kill the emitter when the particle system is deactivated
---@field public bKillOnCompleted boolean @If true, kill the emitter when it completes
---@field public SortMode integer @The sorting mode to use for this emitter. PSORTMODE_None                          - No sorting required. PSORTMODE_ViewProjDepth         - Sort by view projected depth of the particle. PSORTMODE_DistanceToView        - Sort by distance of particle to view in world space. PSORTMODE_Age_OldestFirst       - Sort by age, oldest drawn first. PSORTMODE_Age_NewestFirst       - Sort by age, newest drawn first.
---@field public bUseLegacyEmitterTime boolean @If true, the EmitterTime for the emitter will be calculated by modulating the SecondsSinceCreation by the EmitterDuration. As this can lead to issues w/ looping and variable duration, a new approach has been implemented. If false, this new approach is utilized, and the EmitterTime is simply incremented by DeltaTime each tick. When the emitter loops, it adjusts the EmitterTime by the current EmitterDuration resulting in proper looping/delay behavior.
---@field public bRemoveHMDRoll boolean @If true, removes the HMD view roll (e.g. in VR)
---@field public bEmitterDurationUseRange boolean @If true, select the emitter duration from the range         [EmitterDurationLow..EmitterDuration]
---@field public EmitterDuration number @How long, in seconds, the emitter will run before looping.
---@field public SpawnRate FRawDistributionFloat @The rate at which to spawn particles
---@field public BurstList TArray<FParticleBurst> @The array of burst entries.
---@field public EmitterDelay number @Indicates the time (in seconds) that this emitter should be delayed in the particle system.
---@field public EmitterDelayLow number @The low end of the emitter delay if using a range.
---@field public bDelayFirstLoopOnly boolean @If true, the emitter will be delayed only on the first loop.
---@field public InterpolationMethod integer @The interpolation method to used for the SubUV image selection. One of the following: PSUVIM_None                     - Do not apply SubUV modules to this emitter. PSUVIM_Linear           - Smoothly transition between sub-images in the given order,                                           with no blending between the current and the next PSUVIM_Linear_Blend     - Smoothly transition between sub-images in the given order,                                           blending between the current and the next PSUVIM_Random           - Pick the next image at random, with no blending between                                           the current and the next PSUVIM_Random_Blend     - Pick the next image at random, blending between the current                                           and the next
---@field public bScaleUV boolean @Whether to scale the UV or not - ie, the model wasn't setup with sub uvs
---@field public bEmitterDelayUseRange boolean @If true, select the emitter delay from the range         [EmitterDelayLow..EmitterDelay]
---@field public ParticleBurstMethod integer @The method to utilize when burst-emitting particles
---@field public bOverrideSystemMacroUV boolean @Override the system MacroUV settings
---@field public bUseMaxDrawCount boolean @If true, use the MaxDrawCount to limit the number of particles rendered. NOTE: This does not limit the number spawned/updated, only what is drawn.
---@field public OpacitySourceMode integer
---@field public EmitterNormalsMode integer @Normal generation mode for this emitter LOD.
---@field public bOrbitModuleAffectsVelocityAlignment boolean @Ensures that movement generated from the orbit module is applied to velocity-aligned particles
---@field public SubImages_Horizontal integer @The number of sub-images horizontally in the texture
---@field public SubImages_Vertical integer @The number of sub-images vertically in the texture
---@field public RandomImageTime number @The amount of time (particle-relative, 0.0 to 1.0) to 'lock' on a random sub image     0.0 = change every frame 1.0 = select a random image at spawn and hold for the life of the particle
---@field public RandomImageChanges integer @The number of times to change a random image over the life of the particle.
---@field public MacroUVPosition FVector @Local space position that UVs generated with the ParticleMacroUV material node will be centered on.
---@field public MacroUVRadius number @World space radius that UVs generated with the ParticleMacroUV material node will tile based on.
---@field public UVFlippingMode EParticleUVFlipMode @Controls UV Flipping for this emitter.
---@field public BoundingMode integer @More bounding vertices results in reduced overdraw, but adds more triangle overhead. The eight vertex mode is best used when the SubUV texture has a lot of space to cut out that is not captured by the four vertex version, and when the particles using the texture will be few and large.
---@field public bDurationRecalcEachLoop boolean @If true, recalculate the emitter duration on each loop.
---@field public NormalsSphereCenter FVector @When EmitterNormalsMode is ENM_Spherical, particle normals are created to face away from NormalsSphereCenter. NormalsSphereCenter is in local space.
---@field public AlphaThreshold number @Alpha channel values larger than the threshold are considered occupied and will be contained in the bounding geometry. Raising this threshold slightly can reduce overdraw in particles using this animation asset.
---@field public EmitterLoops integer @The number of times to loop the emitter.     0 indicates loop continuously
---@field public CutoutTexture UTexture2D @Texture to generate bounding geometry from.
---@field public MaxDrawCount integer @The maximum number of particles to DRAW for this emitter. If set to 0, it will use whatever number are present.
---@field public EmitterDurationLow number @The low end of the emitter duration if using a range.
---@field public NormalsCylinderDirection FVector @When EmitterNormalsMode is ENM_Cylindrical, particle normals are created to face away from the cylinder going through NormalsSphereCenter in the direction NormalsCylinderDirection. NormalsCylinderDirection is in local space.
---@field public NamedMaterialOverrides TArray<string> @Named material overrides for this emitter. Overrides this emitter's material(s) with those in the correspondingly named slot(s) of the owning system.
local UParticleModuleRequired = {}

