---Rules for how to scan the asset registry for assets matching path and type descriptions
---@class FAssetManagerSearchRules
---@field public AssetScanPaths TArray<string> @List of top-level directories and specific assets to search, must be paths starting with /, directories should not have a trailing /
---@field public IncludePatterns TArray<string> @Optional list of include wildcard patterns using * that will get matched against full package path. If there are any at least one of these must match
---@field public ExcludePatterns TArray<string> @Optional list of exclude wildcard patterns that can use *, if any of these match it will be excluded
---@field public AssetBaseClass TSubclassOf<UObject> @Assets must inherit from this class, for blueprints this should be the instance base class
---@field public bHasBlueprintClasses boolean @True if scanning for blueprints, false for all other assets
---@field public bForceSynchronousScan boolean @True if this should force a synchronous scan of the disk even if an async scan is in progress
---@field public bSkipVirtualPathExpansion boolean @True if AssetScanPaths are real paths that do not need expansion
---@field public bSkipManagerIncludeCheck boolean @True if this test should skip the ShouldIncludeInAssetSearch function on AssetManager
local FAssetManagerSearchRules = {}
