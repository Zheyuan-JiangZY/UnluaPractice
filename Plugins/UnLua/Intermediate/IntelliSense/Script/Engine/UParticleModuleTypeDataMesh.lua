---@class UParticleModuleTypeDataMesh : UParticleModuleTypeDataBase
---@field public Mesh UStaticMesh @The static mesh to render at the particle positions
---@field public LODSizeScale number @use the static mesh's LOD setup and switch LODs based on largest particle's screen size
---@field public bUseStaticMeshLODs boolean @use the static mesh's LOD setup and switch LODs based on largest particle's screen size
---@field public CastShadows boolean @If true, has the meshes cast shadows
---@field public DoCollisions boolean @UNUSED (the collision module dictates doing collisions)
---@field public MeshAlignment integer @The alignment to use on the meshes emitted. The RequiredModule->ScreenAlignment MUST be set to PSA_TypeSpecific to use. One of the following: PSMA_MeshFaceCameraWithRoll         Face the camera allowing for rotation around the mesh-to-camera FVector         (amount provided by the standard particle sprite rotation). PSMA_MeshFaceCameraWithSpin         Face the camera allowing for the mesh to rotate about the tangential axis. PSMA_MeshFaceCameraWithLockedAxis         Face the camera while maintaining the up FVector as the locked direction.
---@field public bOverrideMaterial boolean @If true, use the emitter material when rendering rather than the one applied to the static mesh model.
---@field public bOverrideDefaultMotionBlurSettings boolean
---@field public bEnableMotionBlur boolean
---@field public RollPitchYawRange FRawDistributionVector @The 'pre' rotation pitch (in degrees) to apply to the static mesh used.
---@field public AxisLockOption integer @The axis to lock the mesh on. This overrides TypeSpecific mesh alignment as well as the LockAxis module.         EPAL_NONE                -      No locking to an axis.         EPAL_X                   -      Lock the mesh X-axis facing towards +X.         EPAL_Y                   -      Lock the mesh X-axis facing towards +Y.         EPAL_Z                   -      Lock the mesh X-axis facing towards +Z.         EPAL_NEGATIVE_X  -      Lock the mesh X-axis facing towards -X.         EPAL_NEGATIVE_Y  -      Lock the mesh X-axis facing towards -Y.         EPAL_NEGATIVE_Z  -      Lock the mesh X-axis facing towards -Z.         EPAL_ROTATE_X    -      Ignored for mesh emitters. Treated as EPAL_NONE.         EPAL_ROTATE_Y    -      Ignored for mesh emitters. Treated as EPAL_NONE.         EPAL_ROTATE_Z    -      Ignored for mesh emitters. Treated as EPAL_NONE.
---@field public bCameraFacing boolean @If true, then point the X-axis of the mesh towards the camera. When set, AxisLockOption as well as all other locked axis/screen alignment settings are ignored.
---@field public CameraFacingOption integer @The camera facing option to use: All camera facing options without locked axis assume X-axis will be facing the camera.         XAxisFacing_NoUp                                - X-axis camera facing, no attempt to face an axis up or down.         XAxisFacing_ZUp                                 - X-axis camera facing, Z-axis of the mesh should attempt to point up.         XAxisFacing_NegativeZUp                 - X-axis camera facing, Z-axis of the mesh should attempt to point down.         XAxisFacing_YUp                                 - X-axis camera facing, Y-axis of the mesh should attempt to point up.         XAxisFacing_NegativeYUp                 - X-axis camera facing, Y-axis of the mesh should attempt to point down. All axis-locked camera facing options assume the AxisLockOption is set. EPAL_NONE will be treated as EPAL_X.         LockedAxis_ZAxisFacing                  - X-axis locked on AxisLockOption axis, rotate Z-axis of the mesh to face towards camera.         LockedAxis_NegativeZAxisFacing  - X-axis locked on AxisLockOption axis, rotate Z-axis of the mesh to face away from camera.         LockedAxis_YAxisFacing                  - X-axis locked on AxisLockOption axis, rotate Y-axis of the mesh to face towards camera.         LockedAxis_NegativeYAxisFacing  - X-axis locked on AxisLockOption axis, rotate Y-axis of the mesh to face away from camera. All velocity-aligned options do NOT require the ScreenAlignment be set to PSA_Velocity. Doing so will result in additional work being performed... (it will orient the mesh twice).         VelocityAligned_ZAxisFacing         - X-axis aligned to the velocity, rotate the Z-axis of the mesh to face towards camera.         VelocityAligned_NegativeZAxisFacing - X-axis aligned to the velocity, rotate the Z-axis of the mesh to face away from camera.         VelocityAligned_YAxisFacing         - X-axis aligned to the velocity, rotate the Y-axis of the mesh to face towards camera.         VelocityAligned_NegativeYAxisFacing - X-axis aligned to the velocity, rotate the Y-axis of the mesh to face away from camera.
---@field public bApplyParticleRotationAsSpin boolean @If true, apply 'sprite' particle rotation about the orientation axis (direction mesh is pointing). If false, apply 'sprite' particle rotation about the camera facing axis.
---@field public bFaceCameraDirectionRatherThanPosition boolean @If true, all camera facing options will point the mesh against the camera's view direction rather than pointing at the cameras location. If false, the camera facing will point to the cameras position as normal.
---@field public bCollisionsConsiderPartilceSize boolean @If true, all collisions for mesh particle on this emitter will take the particle size into account. If false, particle size will be ignored in collision checks.
local UParticleModuleTypeDataMesh = {}

